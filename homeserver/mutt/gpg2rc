# -*-muttrc-*-
#
# Command formats for gpg.
#
# This version uses gpg-2comp from
#   http://muppet.faveve.uni-stuttgart.de/~gero/gpg-2comp.tar.gz
#
# $Id: gpg.rc,v 1.5.2.1 2000/05/23 08:15:02 roessler Exp $
#
# %p    The empty string when no passphrase is needed,
#       the string "PGPPASSFD=0" if one is needed.
#
#       This is mostly used in conditional % sequences.
#
# %f    Most PGP commands operate on a single file or a file
#       containing a message.  %f expands to this file's name.
#
# %s    When verifying signatures, there is another temporary file
#       containing the detached signature.  %s expands to this
#       file's name.
#
# %a    In "signing" contexts, this expands to the value of the
#       configuration variable $pgp_sign_as.  You probably need to
#       use this within a conditional % sequence.
#
# %r    In many contexts, mutt passes key IDs to pgp.  %r expands to
#       a list of key IDs.
#
# setenv PINENTRY_USER_DATA curses
set crypt_use_gpgme = yes
set pgp_use_gpg_agent = yes
#set pgp_sign_as = 0x3A3800D7B0682446
#set pgp_sign_as = 0xDF83E58F8E96A737
# set pgp_sign_as = 0x5EAC9BA9886E488D
set pgp_sign_as = 0x2DA32F006E8A4733
set pgp_timeout = 3600
set crypt_autosign = yes
set crypt_replyencrypt = yes

message-hook '!(~g|~G) ~b"^-----BEGIN\ PGP\ (SIGNED\ )?MESSAGE"' "exec check-traditional-pgp"

#set pgp_decode_command="gpg2 %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"
#set pgp_verify_command="gpg2 --no-verbose --batch --output - --verify %s %f"
#set pgp_decrypt_command="gpg --status-fd=2 %?p?--pinentry-mode loopback --passphrase-fd 0? --no-verbose --quiet --batch --output - --decrypt %f"
#set pgp_check_gpg_decrypt_status_fd = no
#set pgp_sign_command="gpg2 --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
#set pgp_clearsign_command="gpg2 --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
#set pgp_encrypt_only_command="/usr/lib/mutt/pgpewrap gpg2 -v --batch --output - --encrypt --textmode --armor --always-trust --encrypt-to 0x5EAC9BA9886E488D -- -r %r -- %f"
#set pgp_encrypt_sign_command="/usr/lib/mutt/pgpewrap gpg2 --passphrase-fd 0 -v --batch --output - --encrypt --sign %?a?-u %a? --armor --always-trust --encrypt-to 0x5EAC9BA9886E488D -- -r %r -- %f"
#set pgp_import_command="gpg2 --no-verbose --import -v %f"
#set pgp_export_command="gpg2 --no-verbose --export --armor %r"
#set pgp_verify_key_command="gpg2 --no-verbose --batch --fingerprint --check-sigs %r"
#set pgp_list_pubring_command="gpg2 --no-verbose --batch --with-colons --list-keys %r"
#set pgp_list_secring_command="gpg2 --no-verbose --batch --with-colons --list-secret-keys %r"

color body red black   "^gpg: .*$"
color body green black "^gpg: *using.*$"
color body green black "^gpg: *aka.*$"

color body black green "^Good signature from: .*$"
color body green black "^gpg: Signature made .*$"
color body green black "^gpg: encrypted with .*$"

color body brightred black    "^gpg: Bad signature from"
color body brightred black    "^gpg: BAD signature from"
color body brightred black    "^gpg: Note: This key has expired!"
color body brightyellow black "^gpg: WARNING: This key is not certified with a trusted signature!"
color body brightyellow black "^gpg:          There is no indication that the signature belongs to the owner."
color body brightyellow black "^gpg:          There is no indication that the signature belongs to the owner."
color body brightyellow black "^gpg: can't handle these multiple signatures"
color body brightyellow black "^gpg: signature verification suppressed"
color body brightyellow black "^gpg: invalid node with packet of type"
